// <auto-generated />
using System;
using BookShop_BookApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookShop_BookApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookShop_BookApi.Models.Book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("addDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coverUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addDate = new DateTime(2024, 8, 15, 15, 35, 19, 98, DateTimeKind.Local).AddTicks(4450),
                            author = "F. Scott Fitzgerald",
                            coverUrl = "https://example.com/greatgatsby.jpg",
                            description = "A novel set in the Roaring Twenties, exploring themes of wealth, excess, and the American dream.",
                            genre = "Classic",
                            language = "English",
                            price = 100m,
                            stock = 50,
                            title = "The Great Gatsby"
                        },
                        new
                        {
                            id = 2,
                            addDate = new DateTime(2024, 8, 15, 15, 35, 19, 98, DateTimeKind.Local).AddTicks(4464),
                            author = "Harper Lee",
                            coverUrl = "https://example.com/tokillamockingbird.jpg",
                            description = "A novel about the serious issues of rape and racial inequality, told through the eyes of a young girl.",
                            genre = "Classic",
                            language = "English",
                            price = 300m,
                            stock = 30,
                            title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            id = 3,
                            addDate = new DateTime(2024, 8, 15, 15, 35, 19, 98, DateTimeKind.Local).AddTicks(4467),
                            author = "George Orwell",
                            coverUrl = "https://example.com/1984.jpg",
                            description = "A dystopian novel set in a totalitarian society under constant surveillance.",
                            genre = "Dystopian",
                            language = "English",
                            price = 200m,
                            stock = 40,
                            title = "1984"
                        },
                        new
                        {
                            id = 4,
                            addDate = new DateTime(2024, 8, 15, 15, 35, 19, 98, DateTimeKind.Local).AddTicks(4469),
                            author = "Jane Austen",
                            coverUrl = "https://example.com/prideandprejudice.jpg",
                            description = "A romantic novel that also critiques the British landed gentry at the end of the 18th century.",
                            genre = "Romance",
                            language = "English",
                            price = 300m,
                            stock = 20,
                            title = "Pride and Prejudice"
                        },
                        new
                        {
                            id = 5,
                            addDate = new DateTime(2024, 8, 15, 15, 35, 19, 98, DateTimeKind.Local).AddTicks(4471),
                            author = "J.D. Salinger",
                            coverUrl = "https://example.com/catcherintherye.jpg",
                            description = "A novel about teenage rebellion and angst, narrated by the iconic character Holden Caulfield.",
                            genre = "Classic",
                            language = "English",
                            price = 100m,
                            stock = 25,
                            title = "The Catcher in the Rye"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
